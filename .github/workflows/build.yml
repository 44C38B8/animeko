name: Build


on:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

jobs:
  build:
    name: "${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
          - ubuntu-20.04
          - macos-12 # x86_64
          - macos-14 # aarch64
    env:
      enableLocalPublishingTest: 'false'
      gradleArgs: >-
        --scan
        "-Dorg.gradle.jvmargs=-Xmx4096m" 
        "-Dfile.encoding=UTF-8"
        --no-configuration-cache 
        "-Pbangumi.oauth.client.android.appId=${{ secrets.BANGUMI_OAUTH_CLIENT_ANDROID_ID }}" 
        "-Pbangumi.oauth.client.android.secret=${{ secrets.BANGUMI_OAUTH_CLIENT_ANDROID_SECRET }}"
        "-Pbangumi.oauth.client.desktop.appId=${{ secrets.BANGUMI_OAUTH_CLIENT_DESKTOP_ID }}" 
        "-Pbangumi.oauth.client.desktop.secret=${{ secrets.BANGUMI_OAUTH_CLIENT_DESKTOP_SECRET }}"

      isMac: ${{ startsWith(matrix.os, 'macos') }}
      isWindows: ${{ startsWith(matrix.os, 'windows') }}
      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}
      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Cache Konan
        uses: pat-s/always-upload-cache@v3
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-konan-

      - name: Cache Gradle
        uses: pat-s/always-upload-cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Maven
        uses: pat-s/always-upload-cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - if: ${{ env.isUnix == 'true' }}
        run: chmod -R 777 *

      - name: Clean and download dependencies
        run: ./gradlew clean ${{ env.gradleArgs }}

      - name: Update version name
        run: ./gradlew updateDevVersionNameFromGit ${{ env.gradleArgs }}

      - name: Explicitly generate Compose resources
        run: ./gradlew generateComposeResClass ${{ env.gradleArgs }}


      - if: ${{ env.isMac == 'true' }}
        name: Prepare signing key
        id: android_signing_key
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'android_signing_key'
          fileDir: './'
          encodedString: ${{ secrets.SIGNING_RELEASE_STOREFILE }}

      - if: ${{ env.isMac == 'true' }}
        name: Build Android APK
        run: ./gradlew assembleRelease ${{ env.gradleArgs }}
        env:
          "signing_release_storeFileFromRoot": ${{ steps.android_signing_key.outputs.filePath }}
          "signing_release_storePassword": ${{ secrets.SIGNING_RELEASE_STOREPASSWORD }}
          "signing_release_keyAlias": ${{ secrets.SIGNING_RELEASE_KEYALIAS }}
          "signing_release_keyPassword": ${{ secrets.SIGNING_RELEASE_KEYPASSWORD }}

      - if: ${{ env.isMac == 'true' }}
        name: Upload Android APK packages
        uses: actions/upload-artifact@v4
        with:
          name: ani-android
          path: app/android/build/outputs/apk/release/android-release.apk


      - name: Assemble
        run: ./gradlew assemble ${{ env.gradleArgs }}

      - name: Check
        run: ./gradlew check ${{ env.gradleArgs }}

      - name: Package
        run: ./gradlew createDistributable ${{ env.gradleArgs }}
      
      #        continue-on-error: true

      #      - if: ${{ env.isMac == 'true' }}
      #        name: Upload error logs
      #        uses: actions/upload-artifact@v3
      #        with:
      #          name: errors-${{ matrix.os }}
      #          path: desktop/build/compose/logs/
      #        continue-on-error: true

      - if: ${{ env.isMac == 'true' }}
        name: Upload macOS packages
        uses: actions/upload-artifact@v3
        with:
          name: ani-macos
          path: desktop/build/compose/binaries/main/app

      - if: ${{ env.isMac == 'true' }}
        name: Upload macOS packages
        uses: actions/upload-artifact@v3
        with:
          name: ani-macos-installer
          path: desktop/build/compose/binaries/main/dmg

      - if: ${{ env.isUbuntu == 'true' }}
        name: Upload Linux packages
        uses: actions/upload-artifact@v3
        with:
          name: ani-linux
          path: desktop/build/compose/binaries/main/app

      - if: ${{ env.isUbuntu == 'true' }}
        name: Upload Linux packages
        uses: actions/upload-artifact@v3
        with:
          name: ani-ubuntu-installer
          path: desktop/build/compose/binaries/main/deb

      - if: ${{ env.isUbuntu == 'true' }}
        name: Upload Linux packages
        uses: actions/upload-artifact@v3
        with:
          name: ani-redhat-installer
          path: desktop/build/compose/binaries/main/rpm

      - if: ${{ env.isWindows == 'true' }}
        name: Upload Windows packages
        uses: actions/upload-artifact@v3
        with:
          name: ani-windows
          path: desktop/build/compose/binaries/main/app
