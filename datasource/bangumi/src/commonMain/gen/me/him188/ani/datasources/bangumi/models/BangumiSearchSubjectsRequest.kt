/*
 * Copyright (C) 2024-2025 OpenAni and contributors.
 *
 * 此源代码的使用受 GNU AFFERO GENERAL PUBLIC LICENSE version 3 许可证的约束, 可以在以下链接找到该许可证.
 * Use of this source code is governed by the GNU AGPLv3 license, which can be found at the following link.
 *
 * https://github.com/open-ani/ani/blob/main/LICENSE
 */

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package me.him188.ani.datasources.bangumi.models

import kotlinx.serialization.Required
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * 
 *
 * @param keyword 
 * @param sort 排序规则  - `match` meilisearch 的默认排序，按照匹配程度 - `heat` 收藏人数 - `rank` 排名由高到低 - `score` 评分 
 * @param filter 
 */
@Serializable

data class BangumiSearchSubjectsRequest(

    @SerialName(value = "keyword") @Required val keyword: kotlin.String,

    /* 排序规则  - `match` meilisearch 的默认排序，按照匹配程度 - `heat` 收藏人数 - `rank` 排名由高到低 - `score` 评分  */
    @SerialName(value = "sort") val sort: BangumiSearchSubjectsRequest.Sort? = Sort.MATCH,

    @SerialName(value = "filter") val filter: BangumiSearchSubjectsRequestFilter? = null

) {

    /**
     * 排序规则  - `match` meilisearch 的默认排序，按照匹配程度 - `heat` 收藏人数 - `rank` 排名由高到低 - `score` 评分 
     *
     * Values: MATCH,HEAT,RANK,SCORE
     */
    @Serializable
    enum class Sort(val value: kotlin.String) {
        @SerialName(value = "match")
        MATCH("match"),
        @SerialName(value = "heat")
        HEAT("heat"),
        @SerialName(value = "rank")
        RANK("rank"),
        @SerialName(value = "score")
        SCORE("score");
    }

}

